version: '3'

services:

  pastebin:
    container_name: pastebin
#    image: pastebin:latest
    build:
      context: ../
      dockerfile: ./build/Dockerfile
    environment:
      SERVER_PORT: ${SERVER_PORT}
      SERVER_TIMEOUT_READ: ${SERVER_TIMEOUT_READ}
      SERVER_TIMEOUT_WRITE: ${SERVER_TIMEOUT_WRITE}
      SERVER_TIMEOUT_IDLE: ${SERVER_TIMEOUT_IDLE}
      SERVER_DEBUG: ${SERVER_DEBUG}

      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}

      GOOSE_DRIVER: postgres
      GOOSE_DBSTRING: postgresql://${DB_USER}:${DB_PASS}@${DB_HOST}:${DB_PORT}/${DB_NAME}?sslmode=disable
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    command: ["sh", "-c", "/app/goose -dir /app/migrations up && /app/pastebin"]

  db:
    image: postgres:alpine
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${DB_USER} -d ${DB_NAME}'"]
      interval: 3s
      timeout: 5s
      retries: 5
    restart: always

  swagger-ui:
    image: swaggerapi/swagger-ui
    container_name: swagger-ui
    ports:
      - "8001:8080"
    volumes:
      - ../api/openapi.md-spec/build/:/usr/share/nginx/html/api
    environment:
      URLS: "[{ url: \"http://localhost:8080/api/v1/swagger/openapi.json\", name: \"Pastebin\" },]"